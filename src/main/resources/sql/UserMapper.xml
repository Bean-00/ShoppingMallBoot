<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="net.study.shoppingmallboot.domain.user.dao.UserMapper">
    <resultMap id="userSelectMap" type="User">
        <result property="userId" column="user_id" jdbcType="VARCHAR"/>
        <result property="userName" column="user_name" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="role" column="role" jdbcType="VARCHAR"/>
        <result property="ssn" column="ssn" jdbcType="VARCHAR"/>
        <result property="phone" column="cell_phone" jdbcType="VARCHAR"/>
        <result property="addr" column="addr" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="regDate" column="reg_date" jdbcType="DATE"/>
    </resultMap>

    <delete id="deleteUser" parameterType="java.lang.String">
        DELETE
        FROM users
        WHERE user_id = #{userId}
    </delete>

    <!-- SQL : INSERT -->
    <insert id="addUser" parameterType="User">
        INSERT
        INTO users(user_id, user_name, password, role, ssn, cell_phone, addr, email, reg_date)
        VALUES (#{userId}, #{userName}, #{password}, 'user', #{ssn:VARCHAR},
                #{phone:VARCHAR}, #{addr:VARCHAR}, #{email:VARCHAR}, SYSDATE)
    </insert>

    <!-- SQL : SELECT ONE -->
    <select id="getUserById" parameterType="java.lang.String" resultMap="userSelectMap">
        SELECT user_id,
               user_name,
               password,
               role,
               cell_phone,
               addr,
               email,
               reg_date
        FROM users
        WHERE user_id = #{value}
    </select>


    <select id="loginUser" parameterType="User" resultMap="userSelectMap">
        SELECT user_id,
               user_name,
               password,
               role,
               cell_phone,
               addr,
               email,
               reg_date
        FROM users
        WHERE user_id = #{userId}
          AND password = #{password}
    </select>

    <!-- SQL : UPDATE -->
    <update id="updateUser" parameterType="User">
        UPDATE users
        <set>
            user_name = #{userName:VARCHAR},
            cell_phone = #{phone:VARCHAR},
            addr = #{addr:VARCHAR},
            email = #{email:VARCHAR}
        </set>
        WHERE user_id = #{userId}
    </update>

    <!-- SQL : SELECT LIST -->
    <select id="getUserList" parameterType="Search" resultMap="userSelectMap">
        SELECT ROW_NUM AS "rowNum",
        user_id,
        user_name,
        email
        FROM (SELECT ROW_NUMBER() over (ORDER BY USER_ID) AS ROW_NUM,
        user_id,
        user_name,
        email
        FROM USERS
        <if test='searchCondition != null and searchKeyword != null'>
            <where>
                <if test='searchCondition == 0 and searchKeyword !=""'>
                    user_id LIKE '%${searchKeyword}%'
                </if>
                <if test='searchCondition == 1 and searchKeyword !=""'>
                    user_name LIKE '%${searchKeyword}%'
                </if>
            </where>
        </if>
        ) U
        WHERE ROW_NUM BETWEEN #{startIndex} AND #{endIndex}
    </select>
    <!--  위 두번째 subQuery 의
            WHERE ROWNUM &lt;= #{endRowNum} ) 는
            WHERE ROWNUM <= #{endRowNum} ) 의미이며..
            < 는 keyword 로 &lt; 를	사용.

            <![CDATA[  ~~~  ]]> 를 이용하여 아래와 같이 사용  할 수 있다.
            CDATA ==> Character Data 의 의미 Java 에서 \n 같은 특수문자 처리

           WHERE ROWNUM <![CDATA[ <=]]> #{endRowNum} )
   -->

    <!-- SQL : SELECT ROW Count -->
    <select id="getTotalUserCount" parameterType="Search" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM( SELECT user_id , user_name , email
        FROM users
        <if test='searchCondition != null'>
            <where>
                <if test='searchCondition == 0 and searchKeyword !="" '>
                    user_id LIKE '%${searchKeyword}%'
                </if>
                <if test='searchCondition == 1 and searchKeyword !="" '>
                    user_name LIKE '%${searchKeyword}%'
                </if>
            </where>
        </if>
        ) countTable
    </select>

</mapper>